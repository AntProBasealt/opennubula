!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).webauthnJSON={})}(this,function(e){"use strict";function t(e){const t="==".slice(0,(4-e.length%4)%4),n=e.replace(/-/g,"+").replace(/_/g,"/")+t,i=atob(n),r=new ArrayBuffer(i.length),a=new Uint8Array(r);for(let e=0;e<i.length;e++)a[e]=i.charCodeAt(e);return r}function n(e){const t=new Uint8Array(e);let n="";for(const e of t)n+=String.fromCharCode(e);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}const i="copy",r="convert";function a(e,t,n){if(t===i)return n;if(t===r)return e(n);if(t instanceof Array)return n.map(n=>a(e,t[0],n));if(t instanceof Object){const i={};for(const[r,o]of Object.entries(t))if(r in n)null!=n[r]?i[r]=a(e,o.schema,n[r]):i[r]=null;else if(o.required)throw new Error(`Missing key: ${r}`);return i}}function o(e){return{required:!0,schema:e}}function s(e){return{required:!1,schema:e}}const c={type:o(i),id:o(r),transports:s(i)},l={appid:s(i),txAuthSimple:s(i),txAuthGeneric:s({contentType:o(i),content:o(r)}),authnSel:s([r]),exts:s(i),uvi:s(i),loc:s(i),uvm:s(i),authenticatorBiometricPerfBounds:s(i)},u={publicKey:o({rp:o(i),user:o({id:o(r),name:o(i),displayName:o(i),icon:s(i)}),challenge:o(r),pubKeyCredParams:o(i),timeout:s(i),excludeCredentials:s([c]),authenticatorSelection:s(i),attestation:s(i),extensions:s(l)}),signal:s(i)},d={type:o(i),id:o(i),rawId:o(r),response:o({clientDataJSON:o(r),attestationObject:o(r)})},f={mediation:s(i),publicKey:o({challenge:o(r),timeout:s(i),rpId:s(i),allowCredentials:s([c]),userVerification:s(i),extensions:s(l)}),signal:s(i)},p={type:o(i),id:o(i),rawId:o(r),response:o({clientDataJSON:o(r),authenticatorData:o(r),signature:o(r),userHandle:o(r)})},g={credentialCreationOptions:u,publicKeyCredentialWithAttestation:d,credentialRequestOptions:f,publicKeyCredentialWithAssertion:p};e.create=async function(e){const i=a(t,u,e),r=await navigator.credentials.create(i),o=a(n,d,r);return o.clientExtensionResults=r.getClientExtensionResults(),o},e.get=async function(e){const i=a(t,f,e),r=await navigator.credentials.get(i),o=a(n,p,r);return o.clientExtensionResults=r.getClientExtensionResults(),o},e.schema=g,e.supported=function(){return!!(navigator.credentials&&navigator.credentials.create&&navigator.credentials.get&&window.PublicKeyCredential)},Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=index.js.map
